:py:mod:`monitor_schema.models.column_schema`
=============================================

.. py:module:: monitor_schema.models.column_schema

.. autoapi-nested-parse::

   Schema definitions.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   monitor_schema.models.column_schema.ColumnDiscreteness
   monitor_schema.models.column_schema.ColumnDataType
   monitor_schema.models.column_schema.ColumnSchema
   monitor_schema.models.column_schema.WeightConfig
   monitor_schema.models.column_schema.SegmentWeightConfig
   monitor_schema.models.column_schema.EntitySchema
   monitor_schema.models.column_schema.EntityWeights




.. py:class:: ColumnDiscreteness

   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   Classifying the type.

   .. py:attribute:: discrete
      :annotation: = discrete

      

   .. py:attribute:: continuous
      :annotation: = continuous

      


.. py:class:: ColumnDataType

   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   Options for configuring data type for a column.

   .. py:attribute:: integral
      :annotation: = integral

      

   .. py:attribute:: fractional
      :annotation: = fractional

      

   .. py:attribute:: boolean
      :annotation: = bool

      

   .. py:attribute:: string
      :annotation: = string

      

   .. py:attribute:: unknown
      :annotation: = unknown

      

   .. py:attribute:: null
      :annotation: = null

      


.. py:class:: ColumnSchema(**data: Any)

   Bases: :py:obj:`monitor_schema.models.commons.NoExtrasBaseModel`

   Schema configuration for a column.

   Should be generated by WhyLabs originally but can be overridden by users.

   .. py:attribute:: discreteness
      :annotation: :ColumnDiscreteness

      

   .. py:attribute:: dataType
      :annotation: :ColumnDataType

      

   .. py:attribute:: classifier
      :annotation: :Optional[str]

      


.. py:class:: WeightConfig(**data: Any)

   Bases: :py:obj:`monitor_schema.models.commons.NoExtrasBaseModel`

   Object that specifies column weights.

   - By default, the weight of a column is None (unspecified)
   - If the weight is unspecified, the column is EXCLUDED when you perform a filter/sort by weight
   - For sorting, unweighted column take the LEAST PRECEDENCE, meaning that weight column have higher priorities
   - They are not hierarchical: if a segment weight config is specified and a column does not have a weight in that
   config, we will not use any hierarchy to resolve the value. It will be None
   - Order of unweighted column is undefined.

   .. py:attribute:: weights
      :annotation: :Dict[monitor_schema.models.utils.COLUMN_NAME_TYPE, float]

      


.. py:class:: SegmentWeightConfig(**data: Any)

   Bases: :py:obj:`WeightConfig`

   Object that specifies column weights for a segment.

   .. py:attribute:: segment
      :annotation: :Optional[monitor_schema.models.segments.Segment]

      


.. py:class:: EntitySchema(**data: Any)

   Bases: :py:obj:`monitor_schema.models.commons.NoExtrasBaseModel`

   Schema definition of an entity.

   .. py:attribute:: metadata
      :annotation: :Optional[monitor_schema.models.commons.Metadata]

      

   .. py:attribute:: columns
      :annotation: :Dict[monitor_schema.models.utils.COLUMN_NAME_TYPE, ColumnSchema]

      


.. py:class:: EntityWeights(**data: Any)

   Bases: :py:obj:`monitor_schema.models.commons.NoExtrasBaseModel`

   Entity weight configurations.

   .. py:attribute:: metadata
      :annotation: :Optional[monitor_schema.models.commons.Metadata]

      

   .. py:attribute:: defaultWeights
      :annotation: :Optional[WeightConfig]

      

   .. py:attribute:: segmentWeights
      :annotation: :Optional[List[SegmentWeightConfig]]

      


